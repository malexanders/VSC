exit
json.all?{|item| item["status"] == "available"}
json.count(status["available"])
json
exit
json
exit
json
exit
json
exit
json
exit
banned_item[0]["seller_name"]
banned_item[0]["status"]
banned_item[0]
banned_item = response_items.select{|item| item["status"] == "banned"}
exit
response_items[0]["seller_name"]
response_items[0]
response_items
reponse_items[0]
response_items.select{|item| item["status"] == "banned"}
response_items.select{|item| item.status == "banned"}
response_items
exit
parsed_body.map{|item| item["id"]}
all_items.map{|item| item["id"]}
all_items.map{|item| item.id}
all_items.map(|item| item.id)
all_items
all_items[0]
all_items.length
all_items.to_a.map(&:id)
all_items.map(&:id)
exit
returned_item["seller_longtitude"]
returned_item["seller_longitude"]
exit
item.seller.latitude.to_f
item.seller.latitude.to_i
item.seller.latitude.to_d
item.seller.latitude
returned_item["seller_latitude"]
exit
item.published_date.utc.to_s
item.published_date.utc
item.published_date
returned_item["published_date"]
exit
JSON.parse(item.published_date.to_json)
item.published_date.to_json
item.published_date.to_s.to_json
item.published_date.to_s
item.published_date
item.published_date.to_json
exit
xit
exit
exity
item.published_date.to_jsonexit
item.published_date.to_json.to_s
item.published_date.to_json
item.published_date.to_s
returned_item["published_date"]
item.published_date.to_s
returned_item["published_date"].to_datetime
exit
item.published_date.to_s
returned_item["published_date"].to_datetime.
returned_item["published_date"].to_datetime.utc
item.published_date.utc
item.published_date.new_offset(0)
returned_item["published_date"].to_datetime.new_offset(0)
returned_item["published_date"].to_datetime.to_s
returned_item["published_date"].to_datetime
returned_item["published_date"].utc
item.published_date.to_s
returned_item["published_date"].to_datetime.utc.to_s
returned_item["published_date"].to_datetime
returned_item["published_date"].to_datetime.utc
returned_item["published_date"].to_datetime
item.published_date
returned_item["published_date"]
exit
parsed_body
response.body.to_json
response.body
response
returned_item
exit
returned_item
exit
parsed_body == all_items
parsed_body = all_items
parsed_body
exit
all_items
parsed_body == all_items
response.body
response
parsed_body
response = response.body
exit
response = response.body
exit
response.body
response
response = response.body
Item.all.to_json
response.body
exit
parsed_body = JSON.parse(response.body)
exit
request.env["HTTP_ACCEPT"]
exit
request.env["HTTP_ACCEPT"]
request.env
request
exit
request
exit
response.body
exit
response.body
exit
item.categories.first.title
exit
item.categories.first.title
items.categories.first.title
exit
item.categories.first.title
item.categories.first
exit
item.categories[0].title
item.categories[0]
exit
exity
parsed_items.length
parsed_items
parsed_body
pp parsed_body
pp: parsed_body
p parsed_body
pp parsed_body 
parsed_body
exit
Item.where(category: cat1)
cat1.items.length
cat1.items
cat1
cat1 = Category.first
Item.where(category: Category.first)
Item.where(category: Category.first))
Item.where(category_id: 1)
Item.where(category: 1)
test.categorizations.create(category_id: 1)
test.categorizations.create(category: 1)
test.categorizations.create
test.categorizations
test
test = Item.create
Item.categorizations.create(category: Category.first)
Item.where(category: 2)
Item.where(category: 1)
exit
Date.new
Date.now
Date.time
Date
Categorization.all
category.items
category
exit
item_parsed = JSON.parse(item[0].to_json)
response.body
item[0]
item[0].to_json
exit
item[0].id
item[0]
parsed_body["id"]
parsed_body("id")
parsed_body
exit
parsed_body.length
Item.all.length
exit
parsed_body.length
parsed_body
exit
Item.where(seller: user).sold.length
Item.where(seller: user).sold
Item.where(status: 2)
Item.where(status: "sold")
items_sold.length
items_sold
parsed_body.length
parsed_body
exit
Item.where(seller: user).length
Item.where(seller: user)
exit
Item.all.length
exit
exiyt
Item.all.length
Item.all
parsed_body.length
parsed_body pp
p parsed_body
pp parsed_body
parsed_body = JSON.parse(response.body)
response.body
reponse.body
exit
response.body.as_json
response.body.parse_json
response.body.parse
response.body.length
response.body
exit
response.body
exit
item = Item.where(seller: test)[0].sold?
Item.where(seller: test)[0]
Item.where(seller: test)
Item.where(seller: user)
response.body
exit
response.body
Item.where(seller: 46)
Item.seller
test.items
test
exit
user.items
test
exit
response.body
continue
response.body
response
response.content
response.content_type
response
exit
response
exit
get "/items"
get :/index
get :index
exit
get :items(.:format)
get /items(.:format)
get '/items(.:format)'  
